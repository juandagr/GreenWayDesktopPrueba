/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Clases.Validaciones;
import Dao.DaoCostosComercializacion;
import Dao.DaoCostosInversion;
import Dao.DaoCostosOperacionales;
import Dao.DaoCostosOperacionalesOtros;
import Dao.DaoCostosOperacionalesProducto;
import Dao.DaoItemsComercializacion;
import Dao.DaoItemsCostosOperacionales;
import Dao.DaoItemsInversion;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Daniel
 */
public class GUI_ConsultarYEliminarInfoCostosLote extends javax.swing.JFrame {
    
    String loteID = null;
    String cliente = null;
    Gui_InfoLotes gui_infoLotes = null;
    
    String[] subCategoriasInversion = {"APS", "Equipos y maquinaria"};
    String[] subCategoriasCostosOperacionales = {"Mano de obra", "Insecticidas-acaricidas", "Fungicidas", "Herbicidas", "Coadyuvantes", "Fertilizantes foliares", "Fertilizantes edaficos", "Otros gastos-imprevistos"};

    
    /**
     * Creates new form GUI_InfoCostosLote
     */
    public GUI_ConsultarYEliminarInfoCostosLote(Gui_InfoLotes gui_infoLotes) {
        initComponents();
        this.gui_infoLotes=gui_infoLotes;
        this.setLocationRelativeTo(null);
        
        
        this.jTextFieldLote.setText(this.gui_infoLotes.gui_adminLotes.loteID);
        this.jTextFieldLote.setEditable(false);
        this.jTextFieldCedula.setText(this.gui_infoLotes.gui_adminLotes.cliente);
        this.jTextFieldCedula.setEditable(false);
    }

    public void setLoteID(String loteID) {
        this.loteID = loteID;
    }

    public void setCliente(String cliente) {
        this.cliente = cliente;
    }

    public String getLoteID() {
        return loteID;
    }

    public String getCliente() {
        return cliente;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldAño = new javax.swing.JTextField();
        jTextFieldCedula = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldLote = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldSemana = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Información de costos operacionales de lote");

        jLabel1.setText("Cedula cliente:");

        jLabel2.setText("Año:");

        jTextFieldAño.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldAñoKeyTyped(evt);
            }
        });

        jLabel3.setText("Identificador Lote:");

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Informacion Costos"));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
        );

        jButton1.setText("Eliminar Registros");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText("Semana:");

        jTextFieldSemana.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSemanaKeyTyped(evt);
            }
        });

        jButton4.setText("Buscar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextFieldAño, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextFieldCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(43, 43, 43)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel5))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextFieldLote, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextFieldSemana, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(59, 59, 59)
                                    .addComponent(jButton4))))
                        .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(27, 27, 27)
                        .addComponent(jButton2)
                        .addGap(27, 27, 27)
                        .addComponent(jButton3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jTextFieldSemana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jTextFieldAño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String cedula = jTextFieldCedula.getText().trim();
        String lote = jTextFieldLote.getText().trim();
        String año = jTextFieldAño.getText().trim();
        String semana = jTextFieldSemana.getText().trim();
        
        ResultSet comer = new DaoCostosComercializacion().consultarCostosComercializacionxSemanaBD(lote, año, semana);
        try {
            //se pregunta si el resultset no esta vacio, es decir si consulto algo
            while( comer.next()){ 
                new DaoCostosComercializacion().eliminarCostosComercializacionBD(lote, comer.getString(1), año, semana);                
            }

        }
        catch (SQLException ex) {

        } 
        
        ResultSet inv = new DaoCostosInversion().consultarCostosInversionxSemanaBD(lote, año, semana);
        try {
            //se pregunta si el resultset no esta vacio, es decir si consulto algo
            while( inv.next()){ 
                new DaoCostosInversion().eliminarCostosInversionBD(lote, inv.getString(2), año, semana);
            }

        }
        catch (SQLException ex) {

        } 
        
        ResultSet pro = new DaoCostosOperacionalesProducto().consultarCostosOperacionalesProductoxSemanaBD(lote, año, semana);
        try {
            //se pregunta si el resultset no esta vacio, es decir si consulto algo
            while( pro.next()){ 
                new DaoCostosOperacionalesProducto().eliminarCostosProductoBD(lote, pro.getString(2), año, semana);
            }

        }
        catch (SQLException ex) {

        } 
        
        ResultSet op = new DaoCostosOperacionales().consultarCostosOperacionalesxSemanaBD(lote, año, semana);
        try {
            //se pregunta si el resultset no esta vacio, es decir si consulto algo
            while( op.next()){ 
                new DaoCostosOperacionales().eliminarCostosOperacionalesBD(lote, op.getString(2), año, semana);
            }

        }
        catch (SQLException ex) {

        } 
        
        ResultSet ot = new DaoCostosOperacionalesOtros().consultarCostosOperacionalesOtrosxSemanaBD(lote, año, semana);
        try {
            //se pregunta si el resultset no esta vacio, es decir si consulto algo
            while( ot.next()){ 
                new DaoCostosOperacionalesOtros().eliminarCostosOperacionalesOtrosBD(lote, ot.getString(2), año, semana);
            }

        }
        catch (SQLException ex) {

        } 
        
        JOptionPane.showMessageDialog(null, "Registros eliminados exitosamente!", "Informacion!", JOptionPane.INFORMATION_MESSAGE);
        jTextArea1.setText("");
        jTextFieldAño.setText("");
        jTextFieldSemana.setText("");
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.gui_infoLotes.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextFieldAñoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAñoKeyTyped
        char car=evt.getKeyChar();
        if(  jTextFieldAño.getText().length()>=10)evt.consume();
        if((car<'0' || car>'9') ) evt.consume();
    }//GEN-LAST:event_jTextFieldAñoKeyTyped

    private void jTextFieldSemanaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSemanaKeyTyped
        char car=evt.getKeyChar();
        if(  jTextFieldSemana.getText().length()>=10)evt.consume();
        if((car<'0' || car>'9') ) evt.consume();
    }//GEN-LAST:event_jTextFieldSemanaKeyTyped

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (jTextFieldAño.getText().equalsIgnoreCase("") || jTextFieldSemana.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Llene los campos obligatorios", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            jTextArea1.setText("");
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
            
            String texto = "INFORMACION REGISTRADA DE COSTOS\n\n";

            String cedula = jTextFieldCedula.getText().trim();
            String lote = jTextFieldLote.getText().trim();
            String año = jTextFieldAño.getText().trim();
            String semana = jTextFieldSemana.getText().trim();

            //llenar comercializacion
            ResultSet comer = new DaoCostosComercializacion().consultarCostosComercializacionxSemanaBD(lote, año, semana);
            texto+= "Costos de comercializacion\n";
            try {
                //se pregunta si el resultset no esta vacio, es decir si consulto algo
                while( comer.next()){

                    double valor = comer.getDouble(6);
                    String dia = comer.getString(5);


                    // Se añade al modelo la fila completa.
                    texto += "Item: "+comer.getString(1) + "\t" + "dia: "+dia+ "\t" + "Valor: "+valor+"\n"; 


                }

            }
            catch (SQLException ex) {

            }

            //llenar inversion ********************************************************************************************
            ResultSet inv = new DaoCostosInversion().consultarCostosInversionxSemanaBD(lote, año, semana);
            texto+= "\nCostos de inversion\n";
            try {
                //se pregunta si el resultset no esta vacio, es decir si consulto algo
                while( inv.next()){

                    double valor = inv.getDouble(6);
                    String dia = inv.getString(5);


                    // Se añade al modelo la fila completa.
                    texto += "Item: "+inv.getString(2) + "\t" + "dia: "+dia+ "\t" + "Valor: "+valor+"\n"; 

                }

            }
            catch (SQLException ex) {

            }

            //llenar operacionales
            //llenar producto ********************************************************************************************
            ResultSet pro = new DaoCostosOperacionalesProducto().consultarCostosOperacionalesProductoxSemanaBD(lote, año, semana);
            texto+= "\nCostos por producto\n";
            try {
                //se pregunta si el resultset no esta vacio, es decir si consulto algo
                while( pro.next()){
                    double costo = pro.getDouble(6);
                    String dia = pro.getString(5);
                    double presentacion = pro.getDouble(7);
                    double volumen = pro.getDouble(8);
                    double costoFinal = pro.getDouble(9);

                    // Se añade al modelo la fila completa.
                    texto += "Item: "+pro.getString(2) + "\t" +"dia: "+dia+ "\t" + "Costo producto: "+costo+ "\t" +"Presentacion: "+presentacion+ "\t" +"Volumen gastado: "+volumen+ "\t" +"Costo final: "+costoFinal+"\n"; 


                }

            } catch (SQLException ex) {
                Logger.getLogger(GUI_ConsultarYEliminarInfoCostosLote.class.getName()).log(Level.SEVERE, null, ex);
            }

            //llenar mano de obra ********************************************************************************************
            ResultSet mo = new DaoCostosOperacionales().consultarCostosOperacionalesxSemanaBD(lote, año, semana);
            texto+= "\nCostos por mano de obra\n";
            try {
                //se pregunta si el resultset no esta vacio, es decir si consulto algo
                while( mo.next()){
                    int horas = mo.getInt(6);
                    String dia = mo.getString(5);

                    // Se añade al modelo la fila completa.
                    texto += "Item: "+mo.getString(2) + "\t" +"dia: "+dia+ "\t" + "Horas: "+horas+"\n"; 


                }

            } catch (SQLException ex) {
                Logger.getLogger(GUI_ConsultarYEliminarInfoCostosLote.class.getName()).log(Level.SEVERE, null, ex);
            }

            //llenar otros ********************************************************************************************
            ResultSet ot = new DaoCostosOperacionalesOtros().consultarCostosOperacionalesOtrosxSemanaBD(lote, año, semana);
            texto+= "\nCostos por producto\n";
            try {
                //se pregunta si el resultset no esta vacio, es decir si consulto algo
                while( ot.next()){
                    int horas = ot.getInt(6);
                    String dia = ot.getString(5);

                    // Se añade al modelo la fila completa.
                    texto += "Item: "+ot.getString(2) + "\t" +"dia: "+dia+ "\t" + "Valor: "+horas+"\n"; 


                }

            } catch (SQLException ex) {
                Logger.getLogger(GUI_ConsultarYEliminarInfoCostosLote.class.getName()).log(Level.SEVERE, null, ex);
            }

            jTextArea1.append(texto);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTextArea1.setText("");
        jTextFieldAño.setText("");
        jTextFieldSemana.setText("");
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_ConsultarYEliminarInfoCostosLote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_ConsultarYEliminarInfoCostosLote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_ConsultarYEliminarInfoCostosLote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_ConsultarYEliminarInfoCostosLote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_ConsultarYEliminarInfoCostosLote(new Gui_InfoLotes(new GUI_AdminLotes(new Gui_Lotes(new Gui_VentanaPrincipalGerente(new Gui_login()))))).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldAño;
    private javax.swing.JTextField jTextFieldCedula;
    private javax.swing.JTextField jTextFieldLote;
    private javax.swing.JTextField jTextFieldSemana;
    // End of variables declaration//GEN-END:variables
}
